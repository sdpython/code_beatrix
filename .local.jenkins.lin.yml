
language: python

python:
  - { PATH: "{{Python37}}", VERSION: 3.7, DIST: std, PYINT: python3.7, PYTHONPATH: src }
  
virtualenv:
  - path: {{ospathjoin(root_path, pickname("$NAME_JENKINS", project_name + "_$VERSION_$DIST_$NAME"), "_venv")}}
  
install:
  - $PYINT -m pip install --no-cache-dir --no-deps --index http://localhost:8067/simple/ pyquickhelper pyensae pymmails pymyinstall pyrsslocal ensae_projects jyquickhelper --extra-index-url=https://pypi.python.org/simple/
  - $PYINT -m pip install -r requirements_conda.txt
  - $PYINT -m pip install -r requirements.txt
  - $PYINT --version
  - $PYINT -m pip freeze

script:
  - { CMD: "$PYINT -u setup.py unittests -g \".*((noenv)|(LONG)|(SKIP)).*\"", NAME: "UT" }
  - { CMD: "$PYINT -u setup.py unittests -e \".*noenv1.*\" -g .*LONG.*", NAME: "UT_NOENV1" }
  - { CMD: "$PYINT -u setup.py unittests -e \".*noenv2.*\"", NAME: "UT_NOENV2" }
  - { CMD: "$PYINT -u setup.py unittests -e \".*noenv3.*\"", NAME: "UT_NOENV3" }
  - { CMD: "$PYINT -u setup.py unittests -e \".*noenv4.*\"", NAME: "UT_NOENV4" }
  - { CMD: "$PYINT -u setup.py unittests -e \".*noenv5.*\"", NAME: "UT_NOENV5" }
  - { CMD: "$PYINT -u setup.py unittests -e \".*noenv6.*\"", NAME: "UT_NOENV6" }
  - { CMD: "$PYINT -u setup.py unittests -e \".*noenv7.*\"", NAME: "UT_NOENV7" }
  - { CMD: "$PYINT -u setup.py unittests -e \".*noenv8.*\"", NAME: "UT_NOENV8" }
  - { CMD: "$PYINT -u setup.py unittests -e \".*noenv9.*\"", NAME: "UT_NOENV9" }
  - { CMD: "$PYINT -u setup.py unittests -e \".*noenvA.*\"", NAME: "UT_NOENVA" }
  - { CMD: "$PYINT -X faulthandler -X showrefcount -u setup.py unittests -e \".*scratch.*\" -g \".*youtube.*\"", NAME: "UT_SCRATCH" }
  - { CMD: "$PYINT -X faulthandler -X showrefcount -u setup.py unittests -e \".*youtube.*\"", NAME: "UT_YOUTUBE" }
  - { CMD: "$PYINT -u setup.py unittests_SKIP", NAME: "UT_SKIP" }

after_script:
  - $PYINT -u setup.py bdist_wheel
  - if [ ${VERSION} == "3.7" and ${DIST} != "conda" and ${NAME} == "UT" ] then cp dist/*.whl {{root_path}}/../local_pypi/local_pypi_server fi

documentation:
  - if [ ${NAME} == "UT" ] then $PYINT -u setup.py build_sphinx fi
  - if [ ${NAME} == "UT" ] then cp -R -f _doc/sphinxdoc/build/html dist/html fi
  - if [ ${NAME} == "UT" ] then cp -R -f _doc/sphinxdoc/build/elatex/*.pdf dist/html fi
